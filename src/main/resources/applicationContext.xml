<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
        xmlns:p="http://www.springframework.org/schema/p">
    
    <!-- 指定要读取的配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 配置dbcp连接池,sqlite数据库支持多线程操作可能有问题,采用单连接形式 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
	    destroy-method="close" p:driverClassName="${sqlite_driver}"
	    p:url="${sqlite_url}" 
	    p:username="${sqlite_username}" p:password="${sqlite_password}"
	    p:maxActive="1" p:maxIdle="1">
	</bean>
	
	<!-- 事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
	</bean>
  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<!--dataSource属性指定要用到的连接池--> 
		<property name="dataSource" ref="dataSource"/>
		<!--configLocation属性指定mybatis的核心配置文件
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		-->
		<!-- 所有配置的mapper文件 -->
		<property name="mapperLocations" value="classpath*:com/cn/wa000/**/*Mapper.xml" />
	</bean> 
	
	<!-- 
	会扫描com.cn.wa000下的所有接口，然后创建各自接口的动态代理类
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cn.wa000" />
	</bean>
	 -->
    
</beans>